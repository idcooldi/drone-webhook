---
kind: pipeline
name: linux-amd64

platform:
  os: linux
  arch: amd64

steps:
  - name: build-push
    pull: always
    image: golang:1.14
    commands:
      - go build -v -ldflags '-X main.build=${DRONE_BUILD_NUMBER}' -a -o release/linux/amd64/drone-webhook
    environment:
      CGO_ENABLED: 0
    when:
      event:
        exclude:
          - tag

  - name: build-tag
    pull: always
    image: golang:1.14
    commands:
      - go build -v -ldflags '-X main.version=${DRONE_TAG##v} -X main.build=${DRONE_BUILD_NUMBER}' -a -o release/linux/amd64/drone-webhook
    environment:
      CGO_ENABLED: 0
    when:
      event:
        - tag

  - name: executable
    pull: always
    image: golang:1.14
    commands:
      - ./release/linux/amd64/drone-webhook --help

  - name: dryrun
    pull: always
    image: plugins/docker:linux-amd64
    settings:
      cache_from: idcooldi/drone-webhook
      dockerfile: docker/Dockerfile.linux.amd64
      dry_run: true
      repo: idcooldi/drone-webhook
      tags: linux-amd64
    when:
      event:
        - pull_request

  - name: publish
    pull: always
    image: plugins/docker:linux-amd64
    settings:
      auto_tag: true
      auto_tag_suffix: linux-amd64
      cache_from: idcooldi/drone-webhook
      daemon_off: false
      dockerfile: docker/Dockerfile.linux.amd64
      password:
        from_secret: docker_password
      repo: idcooldi/drone-webhook
      username:
        from_secret: docker_username
    when:
      event:
        exclude:
          - pull_request

trigger:
  ref:
    - refs/heads/master
    - refs/pull/**
    - refs/tags/**

---
kind: pipeline
name: linux-arm64

platform:
  os: linux
  arch: arm64

steps:
  - name: build-push
    pull: always
    image: golang:1.13
    commands:
      - go build -v -ldflags '-X main.build=${DRONE_BUILD_NUMBER}' -a -o release/linux/arm64/drone-webhook
    environment:
      CGO_ENABLED: 0
    when:
      event:
        exclude:
          - tag

  - name: build-tag
    pull: always
    image: golang:1.14
    commands:
      - go build -v -ldflags '-X main.version=${DRONE_TAG##v} -X main.build=${DRONE_BUILD_NUMBER}' -a -o release/linux/arm64/drone-webhook
    environment:
      CGO_ENABLED: 0
    when:
      event:
        - tag

  - name: executable
    pull: always
    image: golang:1.14
    commands:
      - ./release/linux/arm64/drone-webhook --help

  - name: dryrun
    pull: always
    image: plugins/docker:linux-arm64
    settings:
      cache_from: idcooldi/drone-webhook
      dockerfile: docker/Dockerfile.linux.arm64
      dry_run: true
      repo: idcooldi/drone-webhook
      tags: linux-arm64
    when:
      event:
        - pull_request

  - name: publish
    pull: always
    image: plugins/docker:linux-arm64
    settings:
      auto_tag: true
      auto_tag_suffix: linux-arm64
      cache_from: idcooldi/drone-webhook
      daemon_off: false
      dockerfile: docker/Dockerfile.linux.arm64
      password:
        from_secret: docker_password
      repo: idcooldi/drone-webhook
      username:
        from_secret: docker_username
    when:
      event:
        exclude:
          - pull_request

trigger:
  ref:
    - refs/heads/master
    - refs/pull/**
    - refs/tags/**

---
kind: pipeline
name: linux-arm

platform:
  os: linux
  arch: arm

steps:
  - name: build-push
    pull: always
    image: golang:1.14
    commands:
      - go build -v -ldflags '-X main.build=${DRONE_BUILD_NUMBER}' -a -o release/linux/arm/drone-webhook
    environment:
      CGO_ENABLED: 0
    when:
      event:
        exclude:
          - tag

  - name: build-tag
    pull: always
    image: golang:1.14
    commands:
      - go build -v -ldflags '-X main.version=${DRONE_TAG##v} -X main.build=${DRONE_BUILD_NUMBER}' -a -o release/linux/arm/drone-webhook
    environment:
      CGO_ENABLED: 0
    when:
      event:
        - tag

  - name: executable
    pull: always
    image: golang:1.14
    commands:
      - ./release/linux/arm/drone-webhook --help

  - name: dryrun
    pull: always
    image: plugins/docker:linux-arm
    settings:
      cache_from: idcooldi/drone-webhook
      dockerfile: docker/Dockerfile.linux.arm
      dry_run: true
      repo: idcooldi/drone-webhook
      tags: linux-arm
    when:
      event:
        - pull_request

  - name: publish
    pull: always
    image: plugins/docker:linux-arm
    settings:
      auto_tag: true
      auto_tag_suffix: linux-arm
      cache_from: idcooldi/drone-webhook
      daemon_off: false
      dockerfile: docker/Dockerfile.linux.arm
      password:
        from_secret: docker_password
      repo: idcooldi/drone-webhook
      username:
        from_secret: docker_username
    when:
      event:
        exclude:
          - pull_request

trigger:
  ref:
    - refs/heads/master
    - refs/pull/**
    - refs/tags/**

---
kind: pipeline
name: manifest

platform:
  os: linux
  arch: amd64

steps:
  - name: manifest
    pull: always
    image: plugins/manifest
    settings:
      ignore_missing: true
      password:
        from_secret: docker_password
      spec: docker/manifest.tmpl
      username:
        from_secret: docker_username

depends_on:
  - linux-amd64
  - linux-arm64
  - linux-arm
